
<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="Access-Control-Allow-Origin" content="*">


      <script src="echarts.min.js"></script>
      <script src="macarons.js"></script>
      <script src="shine.js"></script>
      <script src="infographic.js"></script>
      <script src="roma.js"></script>
      <script src="dark.js"></script>


  <!-- jQuery / jQuery UI -->
  <script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script>
  <script src="http://libs.baidu.com/jqueryui/1.10.2/jquery-ui.min.js"></script>
  <!-- jQuery Touch Punch - Enable Touch Drag and Drop -->
  <script src="core/vendor/jquery.touch-punch.min.js"></script>
  <!-- jQuery.Shapeshift -->
  <script src="core/jquery.shapeshift.js"></script>


  <script src="echarts.min.js"></script>
  <script src='elasticsearch-js/elasticsearch.jquery.js' type='text/javascript'></script>


  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
  <link rel="stylesheet" href="css/metro.css" />
  
  

  <!-- CSS -->
  <style>
    .body_css {
      font-size: 13px;
    }
    .container {
      border: 1px dashed #CCC;
      position: relative; 
    }

    .container > div {
      background: rgb(27,154,247);
      color: rgb(255,255,255);
      position: absolute;
      height: 25px;
      line-height: 25px;
      text-align: center;
      width: 100px;
    }


    .container > .ss-placeholder-child {
      background: transparent;
      border: 1px dashed blue;
      height: 20px;
    }

  </style>



  <!-- Javascript -->
  <script>
  var JSON_DATA=[
      {
         'text' : 'UU',
         'state' : {
           'opened' : true,'selected' : false
         },
         'children' : [
           { 'text' : 'UU05' ,
             'metadata' : { id : 'UU05' }
           },
           { 'text' : 'UU06' ,
             'metadata' : { id : 'UU06' }
           },
           { 'text' : 'UU07' ,
             'metadata' : { id : 'UU07' }
           },
           { 'text' : 'UU08' ,
             'metadata' : { id : 'UU08' }
           },
           { 'text' : 'UU09' ,
             'metadata' : { id : 'UU09' }
           },
           { 'text' : 'UU10' ,
             'metadata' : { id : 'UU10' }
           },
           { 'text' : 'UU11' ,
             'metadata' : { id : 'UU11' }
           },
           { 'text' : 'UU12' ,
             'metadata' : { id : 'UU12' }
           },
           { 'text' : 'UU13' ,
             'metadata' : { id : 'UU13' }
           },
           { 'text' : 'UU14' ,
             'metadata' : { id : 'UU14' }
           },
           { 'text' : 'UU15' ,
             'metadata' : { id : 'UU15' }
           }
         ]
      },
      {
         'text' : '人口属性',
         'children' : [
           { 'text' : '性别' ,
            'children' :[
              { 'text' : '男' ,
                'metadata' : { id : 'P01010001' }
              },
              { 'text' : '女' ,
              'metadata' : { id : 'P01010002' }
             }]
            },
            { 'text' : '年龄' ,
              'children' :[
              { 'text' : '18岁以下' ,
              'metadata' : { id : 'P01020001' }
              },
              { 'text' : '18-23岁' ,
              'metadata' : { id : 'P01020002' }
              },
              { 'text' : '24-30岁' ,
              'metadata' : { id : 'P01020003' }
              },
              { 'text' : '31-40岁' ,
              'metadata' : { id : 'P01020004' }
              },
              { 'text' : '40-50岁' ,
              'metadata' : { id : 'P01020005' }
              },
              { 'text' : '50岁以上' ,
              'metadata' : { id : 'P01020006' }
              }
             ]
            },
            { 'text' : '收入' ,
              'children' :[
              { 'text' : '2000元以下' ,
              'metadata' : { id : 'P01030001' }
              },
              { 'text' : '2000-5000元' ,
              'metadata' : { id : 'P01030002' }
              },
              { 'text' : '5001-8000元' ,
              'metadata' : { id : 'P01030003' }
              },
              { 'text' : '8001-15000元' ,
              'metadata' : { id : 'P01030004' }
              },
              { 'text' : '15000元以上' ,
              'metadata' : { id : 'P01030005' }
              }
             ]
            }
         ]
      },
      {
         'text' : '上网行为',
         'children' : [
           { 'text' : '使用时间段' ,
              'children' :[
              { 'text' : '上班高峰' ,
              'metadata' : { id : 'N00010001' }
              },
              { 'text' : '上班时间' ,
              'metadata' : { id : 'N00010002' }
              },
              { 'text' : '午休' ,
              'metadata' : { id : 'N00010003' }
              },
              { 'text' : '下班高峰' ,
              'metadata' : { id : 'N00010004' }
              },
              { 'text' : '夜晚休闲' ,
              'metadata' : { id : 'N00010005' }
              },
              { 'text' : '夜猫' ,
              'metadata' : { id : 'N00010006' }
              }
             ]
           },
            { 'text' : '活跃度' ,
              'children' :[
              { 'text' : '极浅度' ,
              'metadata' : { id : 'N00020001' }
              },
              { 'text' : '浅度' ,
              'metadata' : { id : 'N00020002' }
              },
              { 'text' : '中度' ,
              'metadata' : { id : 'N00020003' }
              },
              { 'text' : '深度' ,
              'metadata' : { id : 'N00020004' }
              },
              { 'text' : '极重度' ,
              'metadata' : { id : 'N00020003' }
              }
             ]
           },
           { 'text' : '联网方式' ,
              'children' :[
              { 'text' : 'wifi' ,
              'metadata' : { id : 'N00030001' }
              },
              { 'text' : '4G' ,
              'metadata' : { id : 'N00030002' }
              },
              { 'text' : '3G' ,
              'metadata' : { id : 'N00030003' }
              },
              { 'text' : '2G' ,
              'metadata' : { id : 'N00030004' }
              },
              { 'text' : '其他' ,
              'metadata' : { id : 'N00030005' }
              }
             ]
           },
           { 'text' : '运营商' ,
              'children' :[
              { 'text' : '移动' ,
              'metadata' : { id : 'N00040001' }
              },
              { 'text' : '联通' ,
              'metadata' : { id : 'N00040002' }
              },
              { 'text' : '电信' ,
              'metadata' : { id : 'N00040003' }
              }
             ]
           }
         ]
      }
      ]

    $(document).ready(function() {

      

$('#jstree_demo_div').jstree({ 'core' : { // 'data' : JSON_DATA 
    'data' : JSON_DATA 
}
,"plugins" : [ "themes", "json_data", "ui" ]
      }).bind("select_node.jstree", function (e, data) { 

        
        var texts = data.node.original.text
        var context=data.node.original.metadata.id
        console.log(e)
        console.log(data); // 使用开发者工具来查看data的具体格式
        $("#cdtions").append('<div class="operator" title="双击删除">'+texts+':'+context+'\t</div>');

        $(".container").shapeshift(); // 解决新添加的div位置
        $(".operator").bind('dblclick',function(){
          this.remove();
          $(".container").shapeshift();
        });
                
      });

      $(".container").shapeshift();

      $(".button.cycle-button").bind('click',function(event){
        $("#cdtions").append('<div class="operator" style="background: rgb(123,114,233);" title="双击删除">'+$(event.target).text()+'\t</div>');
        $(".container").shapeshift();
        $(".operator").bind('dblclick',function(){
          this.remove();
          $(".container").shapeshift();
      });
      });

      

      $("#sbmt").bind('click',function(){
        var context= $("#cdtions").text();
        // 去除前面的空格/特殊字符
        var arr=context.replace(/^(\s|\u00A0)+/,'').replace(/(\s|\u00A0)+$/,'').split('\t')  // eg: UU05 and UU03 and ( p0101 or N0204 )
        
        if(arr.length<=1 && arr[0]==''){
          alert("invalid select!")
          return 
          }
          

  var TAG=""  
  var isFirst= false  
  var isOR = false
  var existAND = true
        for (var i=0;i<arr.length;i++){
          var val=arr[i].replace(/(.)+:/,'') 
        if(val=='and' || val=='AND'){
        	existAND = true
        	continue;
        	}
        
        if(val=='OR' || val=='or'){
          existAND = false
          continue;
          }
  if(i == 0){
    if (val.indexOf('(')>=0){
      isOR = true
      isFirst =true
    }else{
       TAG = '{"bool":{"should":[{"exists":{"field" : "tags.'+val+'"}}]}}'   //string
    } 
  }else{

    if (val.indexOf('(')>=0){
      isOR = true
      isFirst = true
    }else if(val.indexOf(')')>=0){
      isOR = false
      existAND = true
      TAG = TAG +"]}}"
    }else if(isOR){
      if(isFirst){
      	if(TAG == ''){ // eg: ( UU11 or UU13 )
      		TAG = '{"bool":{"should":[' + '{"exists":{"field" : "tags.'+ val+'"}}'
      	}else{ // UU05 and ( UU11 or UU13 )
          TAG = TAG + "," + '{"bool":{"should":[' + '{"exists":{"field" : "tags.'+ val+'"}}'
        }
       isFirst=false
      }else{
        TAG = TAG + "," +'{"exists":{"field" : "tags.'+ val +'"}}'
      }
    }else{
    	if(existAND){
        TAG = TAG +","+ '{"bool":{"should":[{"exists":{"field" : "tags.'+ val +'"}}]}}'
      }else{ 
      	if(i==2){ // UU11 or UU13
      		TAG = '{"bool":{"should":[' + '{"exists":{"field" : "tags.'+ arr[0].replace(/(.)+:/,'')+'"}}'
      		}
      	TAG = TAG + "," +'{"exists":{"field" : "tags.'+ val +'"}}'
      	if(i==(arr.length-1)){
      	  	TAG = TAG +"]}}"
      	}
    	}
    } 
   }        
   }
   
   var queryTag= '{"must":[' + TAG + ' ]}'
   var jsonTag = eval('(' + queryTag + ')');
   //alert("tag==="+queryTag)
   //console.log(jsonTag); 
          
                // elasticsearch.jquery.js  版
   var client = new $.es.Client({
        hosts: 'http://58.61.152.2:9201',
        log: 'trace' //输出详细的调试信息
      });

      client.ping({
        requestTimeout: 3000,

        // undocumented params are appended to the query string
        hello: "elasticsearch"
      }, function (error) {
        if (error) {
          console.error('elasticsearch cluster is down!');
        } else {
          console.log('All is well');
        }
      });

			
      client.search({
        index: 'tag',
        type: 'taglib',
        body: {
          query: {
	          filtered: {
		          filter: {
		          	query:{bool:jsonTag} // 该批次查询的总人数
		          }
	          }
          },"aggs":{
						"male":{"stats":{"field":"tags.P01010001"}},
						"female":{"stats":{"field":"tags.P01010002"}}
						}
        }
      }).then(function (resp) {
				var headCount=resp.hits.total
				var male=resp.aggregations.male.count
				var female=resp.aggregations.female.count
        option01.series[0].data[0].value = male;
			  option01.series[0].data[1].value = female;
  			option01.series[0].data[2].value = headCount-male-female;
  			myChart01.setOption(option01,true);   				
        console.log(resp)
      }, function (err) {
          console.trace(err.message);
      }); 
      
      
      // '[0-18)','[18-23)','[24-30)','[31-40)','[41-50)','[50 + )','未知'
      client.search({
        index: 'tag',
        type: 'taglib',
        body: {
          query: {
	          filtered: {
		          filter: {
		          	query:{bool:jsonTag} // 该批次查询的总人数
		          }
	          }
          },"aggs":{
						"a01":{"stats":{"field":"tags.P01020001"}},
						"a18":{"stats":{"field":"tags.P01020002"}},
						"a24":{"stats":{"field":"tags.P01020003"}},
						"a31":{"stats":{"field":"tags.P01020004"}},
						"a41":{"stats":{"field":"tags.P01020005"}},
						"a50":{"stats":{"field":"tags.P01020006"}}
						}
        }
      }).then(function (resp) {
				var headCount=resp.hits.total
				var a01=resp.aggregations.a01.count
				var a18=resp.aggregations.a18.count
				var a24=resp.aggregations.a24.count
				var a31=resp.aggregations.a31.count
				var a41=resp.aggregations.a41.count
				var a50=resp.aggregations.a50.count
				
				option02.series[0].data[0].value = a01;
				option02.series[0].data[1].value = a18;
				option02.series[0].data[2].value = a24;
				option02.series[0].data[3].value = a31;
				option02.series[0].data[4].value = a41;
				option02.series[0].data[5].value = a50;
    		option02.series[0].data[6].value = headCount-a01-a18-a31-a41-a50;
    		myChart02.setOption(option02,true);  				
        console.log(resp)
      }, function (err) {
          console.trace(err.message);
      }); 
    
    });
    })
  </script>
</head>
<body class="body_css">
<table border="0" width="100%;">
  <tr>
    <td width="15%"><div id="jstree_demo_div"></div></td>
    <td width="85%">
    <div class="container" id='cdtions'></div>

    <div align="center">
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >AND</button>&nbsp;
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >OR</button>&nbsp;
     <!-- <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >NOT</button>&nbsp;
     -->
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >(</button>&nbsp;
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >)</button>&nbsp;&nbsp;&nbsp;&nbsp;
      <button id='sbmt' class="button primary">提交</button>
    </div>
    </td>
  </tr>
</table>
     
      
  </head>
  
  
  
  
  <body>
    <!-- 为 ECharts 准备一个具备大小（宽高）的Dom -->
    <div id="myChart01" style="width: 600px;height:400px; float: left;"></div>
    <script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart01 = echarts.init(document.getElementById('myChart01'));
        var option01 = {
          title : {
              text: '性别比例',
              subtext: '',
              x:'center'
          },
          tooltip : {
              trigger: 'item',
              formatter: "{a} <br/>{b} : {c} ({d}%)"
          },
          legend: {
              orient: 'vertical',
              left: 'left',
              data: ['男','女','未知']
          },
          series : [
              {
                  name: '男女性别比例',
                  type: 'pie',
                  radius : '55%',
                  center: ['50%', '60%'],
                  data:[
                      {value:0, name:'男'},
                      {value:0, name:'女'},
                      {value:0, name:'未知'}
                  ],
                  itemStyle: {
                      emphasis: {
                          shadowBlur: 10,
                          shadowOffsetX: 0,
                          shadowColor: 'rgba(0, 0, 0, 0.5)'
                      },
                      normal: {
                        // 阴影的大小
                        shadowBlur: 200,
                        // 阴影水平方向上的偏移
                        shadowOffsetX: 0,
                        // 阴影垂直方向上的偏移
                        shadowOffsetY: 0,
                        // 阴影颜色
                        shadowColor: 'rgba(0, 0, 0, 0.2)'
                    }
                  }
              }
          ]
      };
      // 使用刚指定的配置项和数据显示图表。
      myChart01.setOption(option01);
     </script>

     <div id="myChart02" style="width: 600px;height:400px; float: left;"></div>
     <script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart02 = echarts.init(document.getElementById('myChart02'), 'shine');
        var option02 = {
           title : {
              text: '年龄比例',
              subtext: '',
              x:'center'
          },
          tooltip: {
              trigger: 'item',
              formatter: "{a} <br/>{b}: {c} ({d}%)"
          },
          legend: {
              orient: 'vertical',
              x: 'left',
              data:['[0-18)','[18-23)','[24-30)','[31-40)','[41-50)','[50 + )','未知']
          },
          series: [
              {
                  name:'年龄比例',
                  type:'pie',
                  radius: ['40%', '60%'],
                  avoidLabelOverlap: false,
                  label: {
                      normal: {
                          show: true,
                          position: 'left'
                      },
                      emphasis: {
                          show: true,
                          textStyle: {
                              fontSize: '30',
                              fontWeight: 'bold'
                          }
                      }
                  },
                  labelLine: {
                      normal: {
                          show: true
                      }
                  },
                  data:[
                      {value:0, name:'[0-18)'},
                      {value:0, name:'[18-23)'},
                      {value:0, name:'[24-30)'},
                      {value:0, name:'[31-40)'},
                      {value:0, name:'[41-50)'},
                      {value:0, name:'[50+ )'},
                      {value:0, name:'未知'}
                  ]
              }
          ]
      };
        
      // 使用刚指定的配置项和数据显示图表。
      myChart02.setOption(option02);
     </script>

  </body>
</html>