<!DOCTYPE html>
<html>
<head>
    <meta charset='UTF-8'>
    <title>jQuery Gridly</title>





 <!-- jQuery / jQuery UI -->
  <script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script>
  <script src="http://libs.baidu.com/jqueryui/1.10.2/jquery-ui.min.js"></script>
  <!-- jQuery Touch Punch - Enable Touch Drag and Drop -->
  <script src="core/vendor/jquery.touch-punch.min.js"></script>



  <script src="echarts.min.js"></script>
  <script src='elasticsearch-js/elasticsearch.jquery.js' type='text/javascript'></script>


  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
  <link rel="stylesheet" href="css/metro.css" />
  
  
  
      <script src="echarts.min.js"></script>
    <script src="china.js"></script>
    <script src="macarons.js"></script>
      <script src="shine.js"></script>
      <script src="infographic.js"></script>
      <script src="roma.js"></script>
      <script src="dark.js"></script>
        <!-- jQuery.Shapeshift -->
  <script src="core/jquery.shapeshift.js"></script>
  
  

  <!-- CSS -->
  <style>
    .body_css {
      font-size: 13px;
    }
    .container {
      border: 1px dashed #CCC;
      position: relative; 
    }

    .container > div {
      background: rgb(27,154,247);
      color: rgb(255,255,255);
      position: absolute;
      height: 25px;
      line-height: 25px;
      text-align: center;
      width: 100px;
    }


    .container > .ss-placeholder-child {
      background: transparent;
      border: 1px dashed blue;
      height: 20px;
    }

  </style>



  
  <script>
  var JSON_DATA=[
      {
         'text' : 'UU',
         'state' : {
           'opened' : true,'selected' : false
         },
         'children' : [
           { 'text' : 'UU05' ,
             'metadata' : { id : 'UU05' }
           },
           { 'text' : 'UU06' ,
             'metadata' : { id : 'UU06' }
           },
           { 'text' : 'UU07' ,
             'metadata' : { id : 'UU07' }
           },
           { 'text' : 'UU08' ,
             'metadata' : { id : 'UU08' }
           },
           { 'text' : 'UU09' ,
             'metadata' : { id : 'UU09' }
           },
           { 'text' : 'UU10' ,
             'metadata' : { id : 'UU10' }
           },
           { 'text' : 'UU11' ,
             'metadata' : { id : 'UU11' }
           },
           { 'text' : 'UU12' ,
             'metadata' : { id : 'UU12' }
           },
           { 'text' : 'UU13' ,
             'metadata' : { id : 'UU13' }
           },
           { 'text' : 'UU14' ,
             'metadata' : { id : 'UU14' }
           },
           { 'text' : 'UU15' ,
             'metadata' : { id : 'UU15' }
           }
         ]
      },
      {
         'text' : '人口属性',
         'children' : [
           { 'text' : '性别' ,
            'children' :[
              { 'text' : '男' ,
                'metadata' : { id : 'P01010001' }
              },
              { 'text' : '女' ,
              'metadata' : { id : 'P01010002' }
             }]
            },
            { 'text' : '年龄' ,
              'children' :[
              { 'text' : '18岁以下' ,
              'metadata' : { id : 'P01020001' }
              },
              { 'text' : '18-23岁' ,
              'metadata' : { id : 'P01020002' }
              },
              { 'text' : '24-30岁' ,
              'metadata' : { id : 'P01020003' }
              },
              { 'text' : '31-40岁' ,
              'metadata' : { id : 'P01020004' }
              },
              { 'text' : '40-50岁' ,
              'metadata' : { id : 'P01020005' }
              },
              { 'text' : '50岁以上' ,
              'metadata' : { id : 'P01020006' }
              }
             ]
            },
            { 'text' : '收入' ,
              'children' :[
              { 'text' : '2000元以下' ,
              'metadata' : { id : 'P01030001' }
              },
              { 'text' : '2000-5000元' ,
              'metadata' : { id : 'P01030002' }
              },
              { 'text' : '5001-8000元' ,
              'metadata' : { id : 'P01030003' }
              },
              { 'text' : '8001-15000元' ,
              'metadata' : { id : 'P01030004' }
              },
              { 'text' : '15000元以上' ,
              'metadata' : { id : 'P01030005' }
              }
             ]
            }
         ]
      },
      {
         'text' : '上网行为',
         'children' : [
           { 'text' : '使用时间段' ,
              'children' :[
              { 'text' : '上班高峰' ,
              'metadata' : { id : 'N00010001' }
              },
              { 'text' : '上班时间' ,
              'metadata' : { id : 'N00010002' }
              },
              { 'text' : '午休' ,
              'metadata' : { id : 'N00010003' }
              },
              { 'text' : '下班高峰' ,
              'metadata' : { id : 'N00010004' }
              },
              { 'text' : '夜晚休闲' ,
              'metadata' : { id : 'N00010005' }
              },
              { 'text' : '夜猫' ,
              'metadata' : { id : 'N00010006' }
              }
             ]
           },
            { 'text' : '活跃度' ,
              'children' :[
              { 'text' : '极浅度' ,
              'metadata' : { id : 'N00020001' }
              },
              { 'text' : '浅度' ,
              'metadata' : { id : 'N00020002' }
              },
              { 'text' : '中度' ,
              'metadata' : { id : 'N00020003' }
              },
              { 'text' : '深度' ,
              'metadata' : { id : 'N00020004' }
              },
              { 'text' : '极重度' ,
              'metadata' : { id : 'N00020003' }
              }
             ]
           },
           { 'text' : '联网方式' ,
              'children' :[
              { 'text' : 'wifi' ,
              'metadata' : { id : 'N00030001' }
              },
              { 'text' : '4G' ,
              'metadata' : { id : 'N00030002' }
              },
              { 'text' : '3G' ,
              'metadata' : { id : 'N00030003' }
              },
              { 'text' : '2G' ,
              'metadata' : { id : 'N00030004' }
              },
              { 'text' : '其他' ,
              'metadata' : { id : 'N00030005' }
              }
             ]
           },
           { 'text' : '运营商' ,
              'children' :[
              { 'text' : '移动' ,
              'metadata' : { id : 'N00040001' }
              },
              { 'text' : '联通' ,
              'metadata' : { id : 'N00040002' }
              },
              { 'text' : '电信' ,
              'metadata' : { id : 'N00040003' }
              }
             ]
           }
         ]
      }
      ]
      
      

    $(document).ready(function() {

      

$('#jstree_demo_div').jstree({ 'core' : { // 'data' : JSON_DATA 
    'data' : JSON_DATA 
}
,"plugins" : [ "themes", "json_data", "ui" ]
      }).bind("select_node.jstree", function (e, data) { 

        
        var texts = data.node.original.text
        var context=data.node.original.metadata.id
        console.log(e)
        console.log(data); // 使用开发者工具来查看data的具体格式
        $("#cdtions").append('<div class="operator" title="双击删除">'+texts+':'+context+'\t</div>');

        $(".container").shapeshift(); // 解决新添加的div位置
        $(".operator").bind('dblclick',function(){
          this.remove();
          $(".container").shapeshift();
        });
                
      });

      $(".container").shapeshift();

      $(".button.cycle-button").bind('click',function(event){
        $("#cdtions").append('<div class="operator" style="background: rgb(123,114,233);" title="双击删除">'+$(event.target).text()+'\t</div>');
        $(".container").shapeshift();
        $(".operator").bind('dblclick',function(){
          this.remove();
          $(".container").shapeshift();
      });
      });

      

      $("#sbmt").bind('click',function(){
        var context= $("#cdtions").text();
        // 去除前面的空格/特殊字符
        var arr=context.replace(/^(\s|\u00A0)+/,'').replace(/(\s|\u00A0)+$/,'').split('\t')  // eg: UU05 and UU03 and ( p0101 or N0204 )
        
        if(arr.length<=1 && arr[0]==''){
          alert("invalid select!")
          return 
          }
          

  var TAG=""  
  var isFirst= false  
  var isOR = false
  var existAND = true
        for (var i=0;i<arr.length;i++){
          var val=arr[i].replace(/(.)+:/,'') 
        if(val=='and' || val=='AND'){
        	existAND = true
        	continue;
        	}
        
        if(val=='OR' || val=='or'){
          existAND = false
          continue;
          }
  if(i == 0){
    if (val.indexOf('(')>=0){
      isOR = true
      isFirst =true
    }else{
       TAG = '{"bool":{"should":[{"exists":{"field" : "tags.'+val+'"}}]}}'   //string
    } 
  }else{

    if (val.indexOf('(')>=0){
      isOR = true
      isFirst = true
    }else if(val.indexOf(')')>=0){
      isOR = false
      existAND = true
      TAG = TAG +"]}}"
    }else if(isOR){
      if(isFirst){
      	if(TAG == ''){ // eg: ( UU11 or UU13 )
      		TAG = '{"bool":{"should":[' + '{"exists":{"field" : "tags.'+ val+'"}}'
      	}else{ // UU05 and ( UU11 or UU13 )
          TAG = TAG + "," + '{"bool":{"should":[' + '{"exists":{"field" : "tags.'+ val+'"}}'
        }
       isFirst=false
      }else{
        TAG = TAG + "," +'{"exists":{"field" : "tags.'+ val +'"}}'
      }
    }else{
    	if(existAND){
        TAG = TAG +","+ '{"bool":{"should":[{"exists":{"field" : "tags.'+ val +'"}}]}}'
      }else{ 
      	if(i==2){ // UU11 or UU13
      		TAG = '{"bool":{"should":[' + '{"exists":{"field" : "tags.'+ arr[0].replace(/(.)+:/,'')+'"}}'
      		}
      	TAG = TAG + "," +'{"exists":{"field" : "tags.'+ val +'"}}'
      	if(i==(arr.length-1)){
      	  	TAG = TAG +"]}}"
      	}
    	}
    } 
   }        
   }
   
   var queryTag= '{"must":[' + TAG + ' ]}'
   var jsonTag = eval('(' + queryTag + ')');
   //alert("tag==="+queryTag)
   //console.log(jsonTag); 
          
                // elasticsearch.jquery.js  版
   var client = new $.es.Client({
        hosts: 'http://58.61.152.2:9201',
        log: 'trace' //输出详细的调试信息
      });

      client.ping({
        requestTimeout: 3000,

        // undocumented params are appended to the query string
        hello: "elasticsearch"
      }, function (error) {
        if (error) {
          console.error('elasticsearch cluster is down!');
        } else {
          console.log('All is well');
        }
      });

      
      client.search({
        index: 'tag',
        type: 'taglib',
        body: {
          query: {
	          filtered: {
		          filter: {
		          	query:{bool:jsonTag} // 该批次查询的总人数
		          }
	          }
          },"aggs":{
						"a01":{"stats":{"field":"tags.SSP北京市"}},
						"a02":{"stats":{"field":"tags.SSP天津市"}},
						"a03":{"stats":{"field":"tags.SSP上海市"}},
						"a04":{"stats":{"field":"tags.SSP重庆市"}},
						"a05":{"stats":{"field":"tags.SSP河北省"}},
						"a06":{"stats":{"field":"tags.SSP河南省"}},
						"a07":{"stats":{"field":"tags.SSP云南省"}},
						"a08":{"stats":{"field":"tags.SSP辽宁省"}},
						"a09":{"stats":{"field":"tags.SSP黑龙江省"}},
						"a10":{"stats":{"field":"tags.SSP湖南省"}},
						"a11":{"stats":{"field":"tags.SSP安徽省"}},
						"a12":{"stats":{"field":"tags.SSP山东省"}},
						"a13":{"stats":{"field":"tags.SSP新疆维吾尔自治区"}},
						"a14":{"stats":{"field":"tags.SSP江苏省"}},
						"a15":{"stats":{"field":"tags.SSP浙江省"}},
						"a16":{"stats":{"field":"tags.SSP江西省"}},
						"a17":{"stats":{"field":"tags.SSP湖北省"}},
						"a18":{"stats":{"field":"tags.SSP广西壮族自治区"}},
						"a19":{"stats":{"field":"tags.SSP甘肃省"}},
						"a20":{"stats":{"field":"tags.SSP山西省"}},
						"a21":{"stats":{"field":"tags.SSP内蒙古自治区"}},
						"a22":{"stats":{"field":"tags.SSP陕西省"}},
						"a23":{"stats":{"field":"tags.SSP吉林省"}},
						"a24":{"stats":{"field":"tags.SSP福建省"}},
						"a25":{"stats":{"field":"tags.SSP贵州省"}},
						"a26":{"stats":{"field":"tags.SSP广东省"}},
						"a27":{"stats":{"field":"tags.SSP青海省"}},
						"a28":{"stats":{"field":"tags.SSP西藏自治区"}},
						"a29":{"stats":{"field":"tags.SSP四川省"}},
						"a30":{"stats":{"field":"tags.SSP宁夏回族自治区"}},
						"a31":{"stats":{"field":"tags.SSP海南省"}},
						"a32":{"stats":{"field":"tags.SSP台湾"}},
						"a33":{"stats":{"field":"tags.SSP香港"}},
						"a34":{"stats":{"field":"tags.SSP澳门"}}
						}
        }
      }).then(function (resp) {
				var headCount=resp.hits.total
				var a01=resp.aggregations.a01.count
				var a02=resp.aggregations.a02.count
				var a03=resp.aggregations.a03.count
				var a04=resp.aggregations.a04.count
				var a05=resp.aggregations.a05.count
				var a06=resp.aggregations.a06.count
				var a07=resp.aggregations.a07.count
				var a08=resp.aggregations.a08.count
				var a09=resp.aggregations.a09.count
				var a10=resp.aggregations.a10.count
				var a11=resp.aggregations.a11.count
				var a12=resp.aggregations.a12.count
				var a13=resp.aggregations.a13.count
				var a14=resp.aggregations.a14.count
				var a15=resp.aggregations.a15.count
				var a16=resp.aggregations.a16.count
				var a17=resp.aggregations.a17.count
				var a18=resp.aggregations.a18.count
				var a19=resp.aggregations.a19.count
				var a20=resp.aggregations.a20.count
				var a21=resp.aggregations.a21.count
				var a22=resp.aggregations.a22.count
				var a23=resp.aggregations.a23.count
				var a24=resp.aggregations.a24.count
				var a25=resp.aggregations.a25.count
				var a26=resp.aggregations.a26.count
				var a27=resp.aggregations.a27.count
				var a28=resp.aggregations.a28.count
				var a29=resp.aggregations.a29.count
				var a30=resp.aggregations.a30.count
				var a31=resp.aggregations.a31.count
				var a32=resp.aggregations.a32.count
				var a33=resp.aggregations.a33.count
				var a34=resp.aggregations.a34.count
				


				
				
				option01.series[0].data[0].value = a01		
				option01.series[0].data[1].value = a02		
				option01.series[0].data[2].value = a03		
			  option01.series[0].data[3].value = a04	 
			  option01.series[0].data[4].value = a05		
			  option01.series[0].data[5].value = a06
			  option01.series[0].data[6].value = a07		
				option01.series[0].data[7].value = a08		
				option01.series[0].data[8].value = a09		
			  option01.series[0].data[9].value = a10	 
			  option01.series[0].data[10].value = a11		
			  option01.series[0].data[11].value = a12
				option01.series[0].data[12].value = a13		
			  option01.series[0].data[13].value = a14	 
			  option01.series[0].data[14].value = a15		
			  option01.series[0].data[15].value = a16
			  option01.series[0].data[16].value = a17		
				option01.series[0].data[17].value = a18		
				option01.series[0].data[18].value = a19		
			  option01.series[0].data[19].value = a20			  
				option01.series[0].data[20].value = a21		
				option01.series[0].data[21].value = a22		
				option01.series[0].data[22].value = a23		
			  option01.series[0].data[23].value = a24	 
			  option01.series[0].data[24].value = a25		
			  option01.series[0].data[25].value = a26
			  option01.series[0].data[26].value = a27		
				option01.series[0].data[27].value = a28		
				option01.series[0].data[28].value = a29		
			  option01.series[0].data[29].value = a30
			  option01.series[0].data[30].value = a31				  
				option01.series[0].data[31].value = a32		
				option01.series[0].data[32].value = a33		
			  option01.series[0].data[33].value = a34	 


    		 //var myChart01 = echarts.init(document.getElementById('myChart01')); // 重新初始化一下，就能解决圆形大小不显示的问题。
    		 
//    		var myChart02 = echarts.init(document.getElementById('myChart02'), 'shine');
        function randomData() {
           // return Math.round(Math.random()*1000);
        }
    		 
    		myChart02.setOption(option01,true);  				
        console.log(resp)
      }, function (err) {
          console.trace(err.message);
      }); 
    
    });
    })
  </script>
  
</head>
<body class="body_css">
<table border="0" width="100%;">
  <tr>
    <td width="15%"><div id="jstree_demo_div"></div></td>
    <td width="85%">
    <div class="container" id='cdtions'></div>

    <div align="center">
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >AND</button>&nbsp;
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >OR</button>&nbsp;
     <!-- <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >NOT</button>&nbsp;
     -->
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >(</button>&nbsp;
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >)</button>&nbsp;&nbsp;&nbsp;&nbsp;
      <button id='sbmt' class="button primary">提交</button>
    </div>
    </td>
  </tr>
</table>

    <!-- 为 ECharts 准备一个具备大小（宽高）的Dom -->
    <div id="myChart02" style="width: 800px;height:529px; "></div>
    <script type="text/javascript">

        // 基于准备好的dom，初始化echarts实例
        var myChart02 = echarts.init(document.getElementById('myChart02'), 'shine');
        function randomData() {
            return Math.round(Math.random()*1000);
        }

        var option01 = {
        title: {
            text: '受众地域分布',
            subtext: '',
            left: 'center'
        },
        tooltip: {
            trigger: 'item'
        },
        legend: {
            orient: 'vertical',
            left: 'left',
            show: false,
            data:['受众']
        },
        visualMap: {
            min: 0,
            max: 10000,
            left: 'left',
            top: 'bottom',
            text: ['高','低'],           // 文本，默认为数值文本
            calculable: true
        },
        toolbox: {
            show: false,
            orient: 'vertical',
            left: 'right',
            top: 'center',
            feature: {
                dataView: {readOnly: false},
                restore: {},
                saveAsImage: {}
            }
        },
        series: [
            {
                name: '受众',
                type: 'map',
                mapType: 'china',
                hoverAnimation: true,
                roam: false,
                label: {
                    normal: {
                        show: true
                    },
                    emphasis: {
                        show: true
                    }
                },
                data:[
                    {name: '北京',value: randomData() },
                    {name: '天津',value: randomData() },
                    {name: '上海',value: randomData() },
                    {name: '重庆',value: randomData() },
                    {name: '河北',value: randomData() },
                    {name: '河南',value: randomData() },
                    {name: '云南',value: randomData() },
                    {name: '辽宁',value: randomData() },
                    {name: '黑龙江',value: randomData() },
                    {name: '湖南',value: randomData() },
                    {name: '安徽',value: randomData() },
                    {name: '山东',value: randomData() },
                    {name: '新疆',value: randomData() },
                    {name: '江苏',value: randomData() },  
                    {name: '浙江',value: randomData() },
                    {name: '江西',value: randomData() },
                    {name: '湖北',value: randomData() },
                    {name: '广西',value: randomData() },
                    {name: '甘肃',value: randomData() },
                    {name: '山西',value: randomData() },
                    {name: '内蒙古',value: randomData() },
                    {name: '陕西',value: randomData() },
                    {name: '吉林',value: randomData() },
                    {name: '福建',value: randomData() },
                    {name: '贵州',value: randomData() },
                    {name: '广东',value: randomData() },
                    {name: '青海',value: randomData() },
                    {name: '西藏',value: randomData() },
                    {name: '四川',value: randomData() },
                    {name: '宁夏',value: randomData() },
                    {name: '海南',value: randomData() },
                    {name: '台湾',value: randomData() },
                    {name: '香港',value: randomData() },
                    {name: '澳门',value: randomData() }
                ]
            },
        {
            name: 'iphone5',
            type: 'map',
            mapType: 'china',
            label: {
                normal: {
                    show: true
                },
                emphasis: {
                    show: true
                }
            },
            data:[
                {name: '北京',value: randomData() },
                {name: '天津',value: randomData() },
                {name: '上海',value: randomData() },
                {name: '广东',value: randomData() },
                {name: '台湾',value: randomData() },
                {name: '香港',value: randomData() },
                {name: '澳门',value: randomData() }
            ]
        }
        ]
        };
        
      // 使用刚指定的配置项和数据显示图表。
      myChart02.setOption(option01);
     </script>

</body>
</html>