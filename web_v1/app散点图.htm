
<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="Access-Control-Allow-Origin" content="*">


      <script src="echarts.min.js"></script>
      <script src="macarons.js"></script>
      <script src="shine.js"></script>
      <script src="infographic.js"></script>
      <script src="roma.js"></script>
      <script src="dark.js"></script>


  <!-- jQuery / jQuery UI -->
  <script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script>
  <script src="http://libs.baidu.com/jqueryui/1.10.2/jquery-ui.min.js"></script>
  <!-- jQuery Touch Punch - Enable Touch Drag and Drop -->
  <script src="core/vendor/jquery.touch-punch.min.js"></script>
  <!-- jQuery.Shapeshift -->
  <script src="core/jquery.shapeshift.js"></script>


  <script src="echarts.min.js"></script>
  <script src='elasticsearch-js/elasticsearch.jquery.js' type='text/javascript'></script>


  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
  <link rel="stylesheet" href="css/metro.css" />
  
  

  <!-- CSS -->
  <style>
    .body_css {
      font-size: 13px;
    }
    .container {
      border: 1px dashed #CCC;
      position: relative; 
    }

    .container > div {
      background: rgb(27,154,247);
      color: rgb(255,255,255);
      position: absolute;
      height: 25px;
      line-height: 25px;
      text-align: center;
      width: 100px;
    }


    .container > .ss-placeholder-child {
      background: transparent;
      border: 1px dashed blue;
      height: 20px;
    }

  </style>



  <!-- Javascript -->
  <script>
  var JSON_DATA=[
      {
         'text' : 'UU',
         'state' : {
           'opened' : true,'selected' : false
         },
         'children' : [
           { 'text' : 'UU05' ,
             'metadata' : { id : 'UU05' }
           },
           { 'text' : 'UU06' ,
             'metadata' : { id : 'UU06' }
           },
           { 'text' : 'UU07' ,
             'metadata' : { id : 'UU07' }
           },
           { 'text' : 'UU08' ,
             'metadata' : { id : 'UU08' }
           },
           { 'text' : 'UU09' ,
             'metadata' : { id : 'UU09' }
           },
           { 'text' : 'UU10' ,
             'metadata' : { id : 'UU10' }
           },
           { 'text' : 'UU11' ,
             'metadata' : { id : 'UU11' }
           },
           { 'text' : 'UU12' ,
             'metadata' : { id : 'UU12' }
           },
           { 'text' : 'UU13' ,
             'metadata' : { id : 'UU13' }
           },
           { 'text' : 'UU14' ,
             'metadata' : { id : 'UU14' }
           },
           { 'text' : 'UU15' ,
             'metadata' : { id : 'UU15' }
           }
         ]
      },
      {
         'text' : '人口属性',
         'children' : [
           { 'text' : '性别' ,
            'children' :[
              { 'text' : '男' ,
                'metadata' : { id : 'P01010001' }
              },
              { 'text' : '女' ,
              'metadata' : { id : 'P01010002' }
             }]
            },
            { 'text' : '年龄' ,
              'children' :[
              { 'text' : '18岁以下' ,
              'metadata' : { id : 'P01020001' }
              },
              { 'text' : '18-23岁' ,
              'metadata' : { id : 'P01020002' }
              },
              { 'text' : '24-30岁' ,
              'metadata' : { id : 'P01020003' }
              },
              { 'text' : '31-40岁' ,
              'metadata' : { id : 'P01020004' }
              },
              { 'text' : '40-50岁' ,
              'metadata' : { id : 'P01020005' }
              },
              { 'text' : '50岁以上' ,
              'metadata' : { id : 'P01020006' }
              }
             ]
            },
            { 'text' : '收入' ,
              'children' :[
              { 'text' : '2000元以下' ,
              'metadata' : { id : 'P01030001' }
              },
              { 'text' : '2000-5000元' ,
              'metadata' : { id : 'P01030002' }
              },
              { 'text' : '5001-8000元' ,
              'metadata' : { id : 'P01030003' }
              },
              { 'text' : '8001-15000元' ,
              'metadata' : { id : 'P01030004' }
              },
              { 'text' : '15000元以上' ,
              'metadata' : { id : 'P01030005' }
              }
             ]
            }
         ]
      },
      {
         'text' : '上网行为',
         'children' : [
           { 'text' : '使用时间段' ,
              'children' :[
              { 'text' : '上班高峰' ,
              'metadata' : { id : 'N00010001' }
              },
              { 'text' : '上班时间' ,
              'metadata' : { id : 'N00010002' }
              },
              { 'text' : '午休' ,
              'metadata' : { id : 'N00010003' }
              },
              { 'text' : '下班高峰' ,
              'metadata' : { id : 'N00010004' }
              },
              { 'text' : '夜晚休闲' ,
              'metadata' : { id : 'N00010005' }
              },
              { 'text' : '夜猫' ,
              'metadata' : { id : 'N00010006' }
              }
             ]
           },
            { 'text' : '活跃度' ,
              'children' :[
              { 'text' : '极浅度' ,
              'metadata' : { id : 'N00020001' }
              },
              { 'text' : '浅度' ,
              'metadata' : { id : 'N00020002' }
              },
              { 'text' : '中度' ,
              'metadata' : { id : 'N00020003' }
              },
              { 'text' : '深度' ,
              'metadata' : { id : 'N00020004' }
              },
              { 'text' : '极重度' ,
              'metadata' : { id : 'N00020003' }
              }
             ]
           },
           { 'text' : '联网方式' ,
              'children' :[
              { 'text' : 'wifi' ,
              'metadata' : { id : 'N00030001' }
              },
              { 'text' : '4G' ,
              'metadata' : { id : 'N00030002' }
              },
              { 'text' : '3G' ,
              'metadata' : { id : 'N00030003' }
              },
              { 'text' : '2G' ,
              'metadata' : { id : 'N00030004' }
              },
              { 'text' : '其他' ,
              'metadata' : { id : 'N00030005' }
              }
             ]
           },
           { 'text' : '运营商' ,
              'children' :[
              { 'text' : '移动' ,
              'metadata' : { id : 'N00040001' }
              },
              { 'text' : '联通' ,
              'metadata' : { id : 'N00040002' }
              },
              { 'text' : '电信' ,
              'metadata' : { id : 'N00040003' }
              }
             ]
           }
         ]
      }
      ]
      
      

    $(document).ready(function() {

      

$('#jstree_demo_div').jstree({ 'core' : { // 'data' : JSON_DATA 
    'data' : JSON_DATA 
}
,"plugins" : [ "themes", "json_data", "ui" ]
      }).bind("select_node.jstree", function (e, data) { 

        
        var texts = data.node.original.text
        var context=data.node.original.metadata.id
        console.log(e)
        console.log(data); // 使用开发者工具来查看data的具体格式
        $("#cdtions").append('<div class="operator" title="双击删除">'+texts+':'+context+'\t</div>');

        $(".container").shapeshift(); // 解决新添加的div位置
        $(".operator").bind('dblclick',function(){
          this.remove();
          $(".container").shapeshift();
        });
                
      });

      $(".container").shapeshift();

      $(".button.cycle-button").bind('click',function(event){
        $("#cdtions").append('<div class="operator" style="background: rgb(123,114,233);" title="双击删除">'+$(event.target).text()+'\t</div>');
        $(".container").shapeshift();
        $(".operator").bind('dblclick',function(){
          this.remove();
          $(".container").shapeshift();
      });
      });

      

      $("#sbmt").bind('click',function(){
        var context= $("#cdtions").text();
        // 去除前面的空格/特殊字符
        var arr=context.replace(/^(\s|\u00A0)+/,'').replace(/(\s|\u00A0)+$/,'').split('\t')  // eg: UU05 and UU03 and ( p0101 or N0204 )
        
        if(arr.length<=1 && arr[0]==''){
          alert("invalid select!")
          return 
          }
          

  var TAG=""  
  var isFirst= false  
  var isOR = false
  var existAND = true
        for (var i=0;i<arr.length;i++){
          var val=arr[i].replace(/(.)+:/,'') 
        if(val=='and' || val=='AND'){
        	existAND = true
        	continue;
        	}
        
        if(val=='OR' || val=='or'){
          existAND = false
          continue;
          }
  if(i == 0){
    if (val.indexOf('(')>=0){
      isOR = true
      isFirst =true
    }else{
       TAG = '{"bool":{"should":[{"exists":{"field" : "tags.'+val+'"}}]}}'   //string
    } 
  }else{

    if (val.indexOf('(')>=0){
      isOR = true
      isFirst = true
    }else if(val.indexOf(')')>=0){
      isOR = false
      existAND = true
      TAG = TAG +"]}}"
    }else if(isOR){
      if(isFirst){
      	if(TAG == ''){ // eg: ( UU11 or UU13 )
      		TAG = '{"bool":{"should":[' + '{"exists":{"field" : "tags.'+ val+'"}}'
      	}else{ // UU05 and ( UU11 or UU13 )
          TAG = TAG + "," + '{"bool":{"should":[' + '{"exists":{"field" : "tags.'+ val+'"}}'
        }
       isFirst=false
      }else{
        TAG = TAG + "," +'{"exists":{"field" : "tags.'+ val +'"}}'
      }
    }else{
    	if(existAND){
        TAG = TAG +","+ '{"bool":{"should":[{"exists":{"field" : "tags.'+ val +'"}}]}}'
      }else{ 
      	if(i==2){ // UU11 or UU13
      		TAG = '{"bool":{"should":[' + '{"exists":{"field" : "tags.'+ arr[0].replace(/(.)+:/,'')+'"}}'
      		}
      	TAG = TAG + "," +'{"exists":{"field" : "tags.'+ val +'"}}'
      	if(i==(arr.length-1)){
      	  	TAG = TAG +"]}}"
      	}
    	}
    } 
   }        
   }
   
   var queryTag= '{"must":[' + TAG + ' ]}'
   var jsonTag = eval('(' + queryTag + ')');
   //alert("tag==="+queryTag)
   //console.log(jsonTag); 
          
                // elasticsearch.jquery.js  版
   var client = new $.es.Client({
        hosts: 'http://58.61.152.2:9201',
        log: 'trace' //输出详细的调试信息
      });

      client.ping({
        requestTimeout: 3000,

        // undocumented params are appended to the query string
        hello: "elasticsearch"
      }, function (error) {
        if (error) {
          console.error('elasticsearch cluster is down!');
        } else {
          console.log('All is well');
        }
      });

      
      client.search({
        index: 'tag',
        type: 'taglib',
        body: {
          query: {
	          filtered: {
		          filter: {
		          	query:{bool:jsonTag} // 该批次查询的总人数
		          }
	          }
          },"aggs":{
						"a01":{"stats":{"field":"tags.A01"}},
						"a02":{"stats":{"field":"tags.A02"}},
						"a03":{"stats":{"field":"tags.A03"}},
						"a04":{"stats":{"field":"tags.A04"}},
						"a05":{"stats":{"field":"tags.A05"}},
						"a06":{"stats":{"field":"tags.A06"}},
						"a07":{"stats":{"field":"tags.A07"}},
						"a08":{"stats":{"field":"tags.A08"}},
						"a09":{"stats":{"field":"tags.A09"}},
						"a10":{"stats":{"field":"tags.A10"}},
						"a11":{"stats":{"field":"tags.A11"}},
						"a12":{"stats":{"field":"tags.A12"}},
						"a13":{"stats":{"field":"tags.A13"}},
						"a14":{"stats":{"field":"tags.A14"}},
						"a15":{"stats":{"field":"tags.A15"}},
						"a16":{"stats":{"field":"tags.A16"}},
						"a17":{"stats":{"field":"tags.A17"}},
						"a18":{"stats":{"field":"tags.A18"}},
						"a19":{"stats":{"field":"tags.A19"}},
						"a20":{"stats":{"field":"tags.A20"}},
						"a21":{"stats":{"field":"tags.A21"}},
						"a22":{"stats":{"field":"tags.A22"}},
						"a23":{"stats":{"field":"tags.A23"}},
						"a24":{"stats":{"field":"tags.A24"}},
						"a25":{"stats":{"field":"tags.A25"}},
						"a26":{"stats":{"field":"tags.A26"}},
						"a999":{"stats":{"field":"tags.A999"}}
						}
        }
      }).then(function (resp) {
				var headCount=resp.hits.total
				var a01=resp.aggregations.a01.count
				var a02=resp.aggregations.a02.count
				var a03=resp.aggregations.a03.count
				var a04=resp.aggregations.a04.count
				var a05=resp.aggregations.a05.count
				var a06=resp.aggregations.a06.count
				var a07=resp.aggregations.a07.count
				var a08=resp.aggregations.a08.count
				var a09=resp.aggregations.a09.count
				var a10=resp.aggregations.a10.count
				var a11=resp.aggregations.a11.count
				var a12=resp.aggregations.a12.count
				var a13=resp.aggregations.a13.count
				var a14=resp.aggregations.a14.count
				var a15=resp.aggregations.a15.count
				var a16=resp.aggregations.a16.count
				var a17=resp.aggregations.a17.count
				var a18=resp.aggregations.a18.count
				var a19=resp.aggregations.a19.count
				var a20=resp.aggregations.a20.count
				var a21=resp.aggregations.a21.count
				var a22=resp.aggregations.a22.count
				var a23=resp.aggregations.a23.count
				var a24=resp.aggregations.a24.count
				var a25=resp.aggregations.a25.count
				var a26=resp.aggregations.a26.count
				var a999=resp.aggregations.a999.count

				
			/*	for(var i=2;i<10;i++){
					
					option01.series[i].name='A03'
            option01.series[i].type = 'scatter'
            option01.series[i].itemStyle='itemStyle'
					
					}
				*/
				
				option01.series[0].data = [ [01,a01,a01,'工具'] ]			
			  option01.series[1].data = [ [02,a02,a02,'游戏'] ]
			  option01.series[2].data = [ [03,a03,a03,'图书'] ]			
			  option01.series[3].data = [ [04,a04,a04,'娱乐'] ]	 
			  option01.series[4].data = [ [05,a05,a05,'商务'] ]			
			  option01.series[5].data = [ [06,a06,a06,'财务'] ]
			  option01.series[6].data = [ [07,a07,a07,'导航'] ]			
			  option01.series[7].data = [ [08,a08,a08,'健康健美'] ]
			  option01.series[8].data = [ [09,a09,a09,'新闻'] ]			
			  option01.series[9].data = [ [10,a10,a10,'生活'] ]
			  option01.series[10].data = [ [11,a11,a11,'体育'] ]			
			  //option01.series[11].data = [ [12,a12,a12,'其他'] ]
			  option01.series[12].data = [ [13,a13,a13,'儿童'] ]			
			  option01.series[13].data = [ [14,a14,a14,'教育'] ]	 
			  option01.series[14].data = [ [15,a15,a15,'购物'] ]			
			  option01.series[15].data = [ [16,a16,a16,'摄影与录像'] ]
			  option01.series[16].data = [ [17,a17,a17,'效率'] ]			
			  option01.series[17].data = [ [18,a18,a18,'美食佳饮'] ]
			  option01.series[18].data = [ [19,a19,a19,'旅游'] ]			
			  option01.series[19].data = [ [20,a20,a20,'音乐'] ]
			  option01.series[20].data = [ [21,a21,a21,'社交'] ]			
			  option01.series[21].data = [ [22,a22,a22,'报刊杂志'] ]
			  option01.series[22].data = [ [23,a23,a23,'参考'] ]			
			  option01.series[23].data = [ [24,a24,a24,'医疗'] ]	 
			  option01.series[24].data = [ [25,a25,a25,'天气'] ]			
			  option01.series[25].data = [ [26,a26,a26,'商品指南'] ]
			  option01.series[26].data = [ [27,a999,a999,'其他'] ]			
				

    		//option02.series[0].data[6].value = headCount-a01-a18-a31-a41-a50;
    		 var myChart01 = echarts.init(document.getElementById('myChart01')); // 重新初始化一下，就能解决圆形大小不显示的问题。
    		myChart01.setOption(option01,true);  				
        console.log(resp)
      }, function (err) {
          console.trace(err.message);
      }); 
    
    });
    })
  </script>
</head>
<body class="body_css">
<table border="0" width="100%;">
  <tr>
    <td width="15%"><div id="jstree_demo_div"></div></td>
    <td width="85%">
    <div class="container" id='cdtions'></div>

    <div align="center">
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >AND</button>&nbsp;
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >OR</button>&nbsp;
     <!-- <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >NOT</button>&nbsp;
     -->
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >(</button>&nbsp;
      <button class="button cycle-button" style="background: rgb(123,114,233); color: rgb(255,255,255);" >)</button>&nbsp;&nbsp;&nbsp;&nbsp;
      <button id='sbmt' class="button primary">提交</button>
    </div>
    </td>
  </tr>
</table>

  
  
  
  

    <!-- 为 ECharts 准备一个具备大小（宽高）的Dom -->
    <div id="myChart01" style="width: 1000px;height:400px; float: left;"></div>
    <script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart01 = echarts.init(document.getElementById('myChart01'));
        
        
        

var schema = [
  //  {name: 'date', index: 0, text: '日'},
   // {name: 'AQIindex', index: 1, text: '数量'}
    //,
    //{name: 'PM25', index: 2, text: 'PM2.5'}
];


var itemStyle = {
    normal: {
        opacity: 0.8,
        shadowBlur: 10,
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        shadowColor: 'rgba(0, 0, 0, 0.5)'
    }
};
        
        
        
        
        var option01 = {
    backgroundColor: '#333',
    color: [
        '#dd4444', '#fec42c', '#80F1BE'
    ],
    legend: {
        y: 'top',
        //data: ['A01', 'A02', 'A03','A04','A05', 'A06', 'A07','A08','A09','A10','A11', 'A12', 'A13','A14','A15', 'A16', 'A17','A18','A19','A20','A21', 'A22', 'A23','A24','A25', 'A26', 'A27'],
        textStyle: {
            color: '#fff',
            fontSize: 16
        }
    },
    grid: {
        x: '10%',
        x2: 150,
        y: '18%',
        y2: '10%'
    },
    tooltip: {
      padding: 10,
        backgroundColor: '#222',
        borderColor: '#777',
        borderWidth: 1,
        formatter: function (obj) {
            var value = obj.value;
            if(obj.seriesName=='A27'){ // A27 -> A999
            	return '<div style="border-bottom: 1px solid rgba(255,255,255,.3); font-size: 18px;padding-bottom: 7px;margin-bottom: 7px">'
                + 'A999 (' + value[3]+ ')' 
                + '</div>'
                + '数量：' + value[2] + '<br>';
            }else{
            return '<div style="border-bottom: 1px solid rgba(255,255,255,.3); font-size: 18px;padding-bottom: 7px;margin-bottom: 7px">'
                + obj.seriesName + ' (' + value[3]+ ')' 
                + '</div>'
                + '数量：' + value[2] + '<br>';
              }
        } 
    },
    xAxis: {
        type: 'value',
        name: '类别',
        nameGap: 16,
        nameTextStyle: {
            color: '#fff',
            fontSize: 14
        },
        max: 27,
        min: 0,
        splitNumber: 20,
        splitLine: {
            show: false
        },
        axisLine: {
            lineStyle: {
                color: '#777'
            }
        },
        axisTick: {
            lineStyle: {
                color: '#777'
            }
        },
        axisLabel: {
            formatter: '{value}',
            textStyle: {
                color: '#fff'
            }
        }
    },
    yAxis: {
        type: 'value',
        name: '数量',
        nameLocation: 'end',
        nameGap: 20,
        nameTextStyle: {
            color: '#fff',
            fontSize: 16
        },
        axisLine: {
            lineStyle: {
                color: '#777'
            }
        },
        axisTick: {
            lineStyle: {
                color: '#777'
            }
        },
        splitLine: {
            show: false
        },
        axisLabel: {
            textStyle: {
                color: '#fff'
            }
        }
    },
    visualMap: [
        {
            left: 'right',
            top: '10%',
            dimension: 2,
            min: 0,
            max: 20000,
            itemWidth: 30,
            itemHeight: 120,
            calculable: true,
            precision: 0.1,
            text: ['圆形大小：数量'],
            textGap: 30,
            textStyle: {
                color: '#fff'
            },
            inRange: {
                symbolSize: [10, 70]
            },
            outOfRange: {
                symbolSize: [10, 70],
                color: ['rgba(255,255,255,.2)']
            },
            controller: {
                inRange: {
                    color: ['#c23531']
                },
                outOfRange: {
                    color: ['#444']
                }
            }
        }], 
    series: [
        {
            name: 'A01',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A02',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A03',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A04',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A05',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A06',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A07',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A08',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A09',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A10',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A11',
            type: 'scatter',
            itemStyle: itemStyle,
        }
        ,
        {
            name: 'A12',
            type: 'scatter',
            itemStyle: itemStyle,
        }
        ,{
            name: 'A03',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A14',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A15',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A16',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A17',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A18',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A19',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A20',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A21',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A22',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A23',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A24',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A25',
            type: 'scatter',
            itemStyle: itemStyle,
        },
        {
            name: 'A26',
            type: 'scatter',
            itemStyle: itemStyle,
        },{
            name: 'A27',
            type: 'scatter',
            itemStyle: itemStyle,
        }
    ]
};
      // 使用刚指定的配置项和数据显示图表。
      myChart01.setOption(option01);
     </script>

    

  </body>
</html>